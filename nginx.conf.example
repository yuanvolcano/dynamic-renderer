# Nginx 配置示例 - 支持 History 路由模式
# 使用方法：将此文件复制到 nginx 配置目录，并根据实际情况修改路径

server {
    listen 80;
    server_name your-domain.com;  # 替换为你的域名

    # 网站根目录 - H5 构建产物目录
    root /path/to/your/project/dist/build/h5;  # 替换为实际的构建目录
    index index.html;

    # 启用 gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # 静态资源缓存
    location /static/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri $uri/ =404;
    }

    # API 代理（如果有后端接口）
    location /api/ {
        proxy_pass http://your-backend-server;  # 替换为实际的后端地址
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # History 路由支持 - 所有路由都返回 index.html
    location / {
        try_files $uri $uri/ /index.html;

        # 防止缓存 index.html
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # 特殊文件处理
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        log_not_found off;
        access_log off;
    }

    # 安全头设置
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # 错误页面
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;

    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# HTTPS 配置（推荐）
server {
    listen 443 ssl http2;
    server_name your-domain.com;  # 替换为你的域名

    # SSL 证书配置
    ssl_certificate /path/to/ssl/certificate.crt;     # 替换为实际证书路径
    ssl_certificate_key /path/to/ssl/private.key;     # 替换为实际私钥路径

    # SSL 配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # 其他配置与 HTTP 相同
    root /path/to/your/project/dist/build/h5;
    index index.html;

    # ... 复制上面的所有 location 配置 ...

    # HTTPS 重定向
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
}

# HTTP 到 HTTPS 重定向
server {
    listen 80;
    server_name your-domain.com;
    return 301 https://$server_name$request_uri;
}
